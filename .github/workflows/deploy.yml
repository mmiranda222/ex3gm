name: Deploy App to containerized web app
on: [push, workflow_dispatch]

env:
    IMAGE_NAME: flask-demo
    DOCKER_REGISTRY_SERVER_USERNAME: manuelacr
    DOCKER_REGISTRY_SERVER_URL: manuelacr.azurecr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@main

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY_SERVER_URL }}
        username: ${{ env.DOCKER_REGISTRY_SERVER_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Set image version
      id: image-version
      run: echo "::set-output name=version::$(date +'%Y.%m.%d.%H.%M')"
    
    - name: 'Build and push image'
      run: |
        docker build . -t ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}
        docker build . -t ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:latest
    - uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEB_APP_NAME }}
        images: '${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:latest'
